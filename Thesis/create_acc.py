# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'create_acct.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
import os,csv,cv2



class Ui_Formcreate(object):
        def setupUi(self, Form):
                Form.setObjectName("Form")
                Form.resize(463, 531)
                self.admintext = QtWidgets.QLabel(Form)
                self.admintext.setGeometry(QtCore.QRect(110, 50, 281, 41))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(16)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(9)
                self.admintext.setFont(font)
                self.admintext.setAutoFillBackground(False)
                self.admintext.setStyleSheet("font: 75 16pt \"Arial\";")
                self.admintext.setObjectName("admintext")
                self.username = QtWidgets.QLineEdit(Form)
                self.username.setGeometry(QtCore.QRect(90, 150, 211, 31))
                font = QtGui.QFont()
                font.setItalic(True)
                self.username.setFont(font)
                self.username.setStyleSheet("border-radius: 10px")
                self.username.setObjectName("username")
                self.background = QtWidgets.QLabel(Form)
                self.background.setGeometry(QtCore.QRect(0, 0, 463, 531))
                self.background.setText("")
                self.background.setPixmap(QtGui.QPixmap("background/minimalist-4k-wallpaper-hd-15-920x518.jpg"))
                self.background.setScaledContents(True)
                self.background.setObjectName("background")
                self.login = QtWidgets.QPushButton(Form)
                self.login.setGeometry(QtCore.QRect(160, 360, 75, 31))
                self.login.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.login.setAutoFillBackground(False)
                self.login.setStyleSheet("font: 12pt \"Sitka\";\n"
        "border-radius: 10px;\n"
        "background-color: rgb(255, 255, 255);")
                self.login.setDefault(False)
                self.login.setObjectName("login")

                self.login.clicked.connect(self.savebutton)

                self.label_10 = QtWidgets.QLabel(Form)
                self.label_10.setGeometry(QtCore.QRect(10, 150, 71, 21))
                font = QtGui.QFont()
                font.setBold(True)
                font.setItalic(True)
                font.setWeight(75)
                self.label_10.setFont(font)
                self.label_10.setObjectName("label_10")
                self.username_2 = QtWidgets.QLineEdit(Form)
                self.username_2.setGeometry(QtCore.QRect(90, 190, 211, 31))
                font = QtGui.QFont()
                font.setItalic(True)
                self.username_2.setFont(font)
                self.username_2.setStyleSheet("border-radius: 10px")
                self.username_2.setObjectName("username_2")
                self.label_11 = QtWidgets.QLabel(Form)
                self.label_11.setGeometry(QtCore.QRect(10, 190, 71, 21))
                font = QtGui.QFont()
                font.setBold(True)
                font.setItalic(True)
                font.setWeight(75)
                self.label_11.setFont(font)
                self.label_11.setObjectName("label_11")
                self.username_3 = QtWidgets.QLineEdit(Form)
                self.username_3.setGeometry(QtCore.QRect(90, 230, 211, 31))
                font = QtGui.QFont()
                font.setItalic(True)
                self.username_3.setFont(font)
                self.username_3.setStyleSheet("border-radius: 10px")
                self.username_3.setObjectName("username_3")
                self.label_12 = QtWidgets.QLabel(Form)
                self.label_12.setGeometry(QtCore.QRect(10, 230, 71, 21))
                font = QtGui.QFont()
                font.setBold(True)
                font.setItalic(True)
                font.setWeight(75)
                self.label_12.setFont(font)
                self.label_12.setObjectName("label_12")
                self.label_13 = QtWidgets.QLabel(Form)
                self.label_13.setGeometry(QtCore.QRect(10, 270, 71, 21))
                font = QtGui.QFont()
                font.setBold(True)
                font.setItalic(True)
                font.setWeight(75)
                self.label_13.setFont(font)
                self.label_13.setObjectName("label_13")
                self.username_4 = QtWidgets.QLineEdit(Form)
                self.username_4.setGeometry(QtCore.QRect(90, 270, 211, 31))
                font = QtGui.QFont()
                font.setItalic(True)
                self.username_4.setFont(font)
                self.username_4.setEchoMode(QtWidgets.QLineEdit.Password)
                self.username_4.setStyleSheet("border-radius: 10px")
                self.username_4.setObjectName("username_4")
                self.label_14 = QtWidgets.QLabel(Form)
                self.label_14.setGeometry(QtCore.QRect(20, 310, 51, 21))
                font = QtGui.QFont()
                font.setBold(True)
                font.setItalic(True)
                font.setWeight(75)
                self.label_14.setFont(font)
                self.label_14.setObjectName("label_14")
                self.username_5 = QtWidgets.QLineEdit(Form)
                self.username_5.setGeometry(QtCore.QRect(90, 310, 211, 31))
                font = QtGui.QFont()
                font.setItalic(True)
                self.username_5.setFont(font)
                self.username_5.setEchoMode(QtWidgets.QLineEdit.Password)
                self.username_5.setStyleSheet("border-radius: 10px")
                self.username_5.setObjectName("username_5")
                self.label_3 = QtWidgets.QLabel(Form)
                self.label_3.setGeometry(QtCore.QRect(330, 150, 101, 91))
                self.label_3.setAutoFillBackground(False)
                self.label_3.setStyleSheet("border-radius: 5px;\n"
        "background-color: rgb(255, 255, 255);")
                self.label_3.setText("")
                self.label_3.setObjectName("label_3")
                self.login_2 = QtWidgets.QPushButton(Form)
                self.login_2.setGeometry(QtCore.QRect(340, 250, 81, 31))
                self.login_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.login_2.setAutoFillBackground(False)
                self.login_2.setStyleSheet("font: 12pt \"Sitka\";\n"
        "border-radius: 10px;\n"
        "background-color: rgb(255, 255, 255);")
                self.login_2.setDefault(False)
                self.login_2.setObjectName("login_2")

                self.login_2.clicked.connect(self.takephoto)

                self.loginlogo = QtWidgets.QLabel(Form)
                self.loginlogo.setGeometry(QtCore.QRect(20, 40, 71, 71))
                self.loginlogo.setAutoFillBackground(False)
                self.loginlogo.setText("")
                self.loginlogo.setPixmap(QtGui.QPixmap("background/nemco_logo1.jpg"))
                self.loginlogo.setScaledContents(True)
                self.loginlogo.setWordWrap(False)
                self.loginlogo.setObjectName("loginlogo")
                self.background.raise_()
                self.admintext.raise_()
                self.username.raise_()
                self.login.raise_()
                self.label_10.raise_()
                self.username_2.raise_()
                self.label_11.raise_()
                self.username_3.raise_()
                self.label_12.raise_()
                self.label_13.raise_()
                self.username_4.raise_()
                self.label_14.raise_()
                self.username_5.raise_()
                self.label_3.raise_()
                self.login_2.raise_()
                self.loginlogo.raise_()

                self.retranslateUi(Form)
                QtCore.QMetaObject.connectSlotsByName(Form)

        def retranslateUi(self, Form):
                _translate = QtCore.QCoreApplication.translate
                Form.setWindowTitle(_translate("Form", "Form"))
                self.admintext.setText(_translate("Form", "Admin Account Creation"))
                self.username.setPlaceholderText(_translate("Form", "Id"))
                self.login.setText(_translate("Form", "Save"))
                self.label_10.setText(_translate("Form", "ID Number"))
                self.username_2.setPlaceholderText(_translate("Form", "First name"))
                self.label_11.setText(_translate("Form", "Firstname:"))
                self.username_3.setPlaceholderText(_translate("Form", "Last name"))
                self.label_12.setText(_translate("Form", "Last Name"))
                self.label_13.setText(_translate("Form", "Password"))
                self.username_4.setPlaceholderText(_translate("Form", "Password"))
                self.label_14.setText(_translate("Form", "Confirm"))
                self.username_5.setPlaceholderText(_translate("Form", "Confirm Password"))
                self.login_2.setText(_translate("Form", "Take Picture"))

        def savebutton(self): 
            self.out()
            self.delete()
        
        def takephoto(self):
             self.TakeImages()
            
        def connecting(self):
            try:
                conn = sqlite3.connect("admin.db")
            except:
                print("cannot connect to the database")
            return conn       

        def add_register(self):
            conn = self.connecting()
            cur = conn.cursor()
            
            stid = self.username.text()
            fname = self.username_2.text()
            lname = self.username_3.text()
            pas = self.username_5.text()
            
            cur.execute("CREATE TABLE IF NOT EXISTS Admin( ID_Number INTEGER NOT NULL, First_Name TEXT NOT NULL, Last_Name TEXT NOT NULL, Password TEXT NOT NULL)")
            sql = "INSERT INTO  Admin (ID_Number, First_Name, Last_Name, Password) VALUES (?,?,?,?)"
            val = (stid, fname, lname, pas)

            cur.execute(sql, val)
            conn.commit()
            conn.close()   
        
        def out(self):
            try:
                idnum = self.username.text()
                fname1 = self.username_2.text()
                lastname1 = self.username_3.text()
                passwords = self.username_4.text()
                cpasswords = self.username_5.text()
                
                if len(idnum)!= 0 and len(fname1)!=0 and len(lastname1)!= 0 and len(passwords)!=0 and len(cpasswords)!=0: 
                    try:
                        int(idnum)
                        it_is = True
                        if (passwords != cpasswords):
                            msg = QMessageBox()
                            msg.setWindowTitle("WARNING")
                            msg.setText("PASSWORD DON'T MATCH")
                            x = msg.exec()
                        
                        elif (passwords == cpasswords):
                           
                            self.add_register()
                            msg = QMessageBox()
                            msg.setWindowTitle("NOTICE")
                            msg.setText("USER SAVE")
                            x = msg.exec()
                        
                    except ValueError:
                        it_is = False
                        msg = QMessageBox()
                        msg.setWindowTitle("WARNING")
                        msg.setText("ID INVALID")
                        x = msg.exec()
                        
                else:
                    msg = QMessageBox()
                    msg.setWindowTitle("WARNING")
                    msg.setText("Invalid Input")
                    x = msg.exec()
                    
            except:
                print("Error")
             
        def sec_window(self):
            self.window = QtWidgets.QMainWindow()
            self.ui = Main()
            self.ui.setupUi(self.window)
            self.window.show()
        
        def TakeImages(self):
       
         #Initialize the classifier
            faceCascade = cv2.CascadeClassifier("/home/admin/Desktop/Thesis/haarcascades/haarcascade_frontalface_default.xml")

            # Start the video camera
            vc = cv2.VideoCapture(0)

            # Get the userId and userName
            #print("Enter the id and name of the person: ")
            
            userId = self.username.text()
            userName = self.username_2.text()
            
            #userId = input()
            #userName = input()

            # Initially Count is = 1
            count = 1
            num_of_images = 0

            # Function to save the image
            def saveImage(image, userName, userId, imgId):
                # Save the images inside the previously created folder
                cv2.imwrite("/home/admin/Desktop/Thesis/admin/{}.jpeg".format(userId), image)
                print("[INFO] Image {} has been saved  : {}".format(imgId, userName))

            print("[INFO] Video Capture is now starting please stay still...")

            while True:
                # Capture the frame/image
                ret, img = vc.read()

                # Copy the original Image
                originalImg = img.copy()

                # Get the gray version of our image
                gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

                # Get the coordinates of the location of the face in the picture
                faces = faceCascade.detectMultiScale(gray_img, scaleFactor=1.1, minNeighbors=5)

                # Draw a rectangle at the location of the coordinates
                for (x, y, w, h) in faces:
                    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
                    coords = [x, y, w, h]
                
                # Show the image
                #cv2.imshow("Identified Face", img)
                cv2.imshow("Press Space to take a photo", img)
                
                
                    # Wait for user keypress
                key = cv2.waitKey(20)
                #rawCapture.truncate(0)
                # Check if the pressed key is 'k' or 'q'
                if key == ord('s'): #or count > 4:
                    break
                elif key == 32:
                    try:
                        roi_img = originalImg[coords[1]: coords[1] + coords[3], coords[0]: coords[0] + coords[2]]
                        saveImage(roi_img, userName, userId, count)
                        count += 1
                        
                        self.label_3.setScaledContents(True)
                        pixmap = QPixmap('/home/admin/Desktop/Thesis/admin/'+ userId +'.jpeg')
                        self.label_3.setPixmap(pixmap)
                        self.label_3.repaint()
                        
                        
                  
                    except:
                        pass
                    
                    # If count is less than 5 then save the image
                    # If q is pressed break out of the loop
            #print("[INFO] Dataset has been created for {}".format(userName))

            # Stop the video camera
            vc.release()
            # Close all Windows
            cv2.destroyAllWindows()
        
        def delete(self):
            self.username.clear()
            self.username_2.clear()
            self.username_3.clear()
            self.username_4.clear()
            self.username_5.clear()
            self.label_3.clear()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Formcreate()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

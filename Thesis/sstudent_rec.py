# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sstudent_rec.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sqlite3,sys
import os,csv,cv2
import numpy as np
from pathlib import Path
import time
import datetime
import pandas as pd
import pickle
import re
import imutils
import glob
import face_recognition
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5 import QtCore, QtGui, QtWidgets
from sstudent_reg1 import Ui_reg


class Ui_rec(object):
    def setupUi(self, main):
        main.setObjectName("main")
        main.setEnabled(True)
        main.resize(611, 601)
        font = QtGui.QFont()
        font.setKerning(True)
        main.setFont(font)
        main.setStyleSheet("")
        main.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(main)
        self.centralwidget.setObjectName("centralwidget")
        self.background = QtWidgets.QLabel(self.centralwidget)
        self.background.setGeometry(QtCore.QRect(0, 0, 611, 601))
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap("background/minimalist-4k-wallpaper-hd-15-920x518.jpg"))
        self.background.setScaledContents(True)
        self.background.setObjectName("background")
        self.recframe = QtWidgets.QFrame(self.centralwidget)
        self.recframe.setGeometry(QtCore.QRect(10, 20, 591, 571))
        self.recframe.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.recframe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.recframe.setObjectName("recframe")
        self.label_4 = QtWidgets.QLabel(self.recframe)
        self.label_4.setGeometry(QtCore.QRect(130, 90, 151, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.update = QtWidgets.QPushButton(self.recframe)
        self.update.setGeometry(QtCore.QRect(350, 480, 71, 31))
        
        self.update.clicked.connect(self.regbutton)
        
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.update.setFont(font)
        self.update.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.update.setAutoFillBackground(False)
        self.update.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.update.setAutoDefault(False)
        self.update.setDefault(False)
        self.update.setFlat(False)
        self.update.setObjectName("update")
        self.label = QtWidgets.QLabel(self.recframe)
        self.label.setGeometry(QtCore.QRect(0, 0, 591, 571))
        self.label.setAutoFillBackground(True)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("background/HD-wallpaper-portrait-display-vertical-pattern-digital-art-cyan-polygon-art.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.recvac = QtWidgets.QComboBox(self.recframe)
        self.recvac.setGeometry(QtCore.QRect(50, 390, 201, 31))
        self.recvac.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        
        self.recvac.addItem("")
        self.recvac.addItem("")
        self.recvac.addItem("")
        self.recvac.addItem("")
        self.recvac.setObjectName("recvac")
        self.label_5 = QtWidgets.QLabel(self.recframe)
        self.label_5.setGeometry(QtCore.QRect(130, 200, 151, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.idsearch = QtWidgets.QPushButton(self.recframe)
        self.idsearch.setGeometry(QtCore.QRect(500, 110, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.idsearch.setFont(font)
        self.idsearch.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.idsearch.setAutoFillBackground(False)
        
        self.idsearch.clicked.connect(self.idsearchbutton)
        
        self.idsearch.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.idsearch.setAutoDefault(False)
        self.idsearch.setDefault(False)
        self.idsearch.setFlat(False)
        self.idsearch.setObjectName("idsearch")
        self.delete_2 = QtWidgets.QPushButton(self.recframe)
        self.delete_2.setGeometry(QtCore.QRect(470, 480, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.delete_2.setFont(font)
        self.delete_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.delete_2.setAutoFillBackground(False)
        self.delete_2.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.delete_2.setAutoDefault(False)
        self.delete_2.setDefault(False)
        self.delete_2.setFlat(False)
        self.delete_2.setObjectName("delete_2")
#         self.recsec = QtWidgets.QLineEdit(self.recframe)
#         self.recsec.setGeometry(QtCore.QRect(50, 430, 201, 31))
#         font = QtGui.QFont()
#         font.setFamily("Sitka")
#         font.setPointSize(12)
#         font.setBold(False)
#         font.setItalic(False)
#         font.setWeight(50)
#         self.recsec.setFont(font)
#         self.recsec.setStyleSheet("font: 12pt \"Sitka\";\n"
# "border-radius: 10px;\n"
# "background-color: rgb(255, 255, 255);")
#         self.recsec.setText("")
#         self.recsec.setObjectName("recsec")
        self.label_6 = QtWidgets.QLabel(self.recframe)
        self.label_6.setGeometry(QtCore.QRect(100, 310, 151, 21))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
        self.label_6.setObjectName("label_6")
#         self.reccourse = QtWidgets.QLineEdit(self.recframe)
#         self.reccourse.setGeometry(QtCore.QRect(50, 350, 201, 31))
#         font = QtGui.QFont()
#         font.setFamily("Sitka")
#         font.setPointSize(12)
#         font.setBold(False)
#         font.setItalic(False)
#         font.setWeight(50)
#         self.reccourse.setFont(font)
#         self.reccourse.setStyleSheet("font: 12pt \"Sitka\";\n"
# "border-radius: 10px;\n"
# "background-color: rgb(255, 255, 255);")
#         self.reccourse.setText("")
#         self.reccourse.setObjectName("reccourse")
        self.recfirst = QtWidgets.QLabel(self.recframe)
        self.recfirst.setGeometry(QtCore.QRect(130, 150, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.recfirst.setFont(font)
        self.recfirst.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.recfirst.setText("")
        self.recfirst.setObjectName("recfirst")
        self.reclast = QtWidgets.QLabel(self.recframe)
        self.reclast.setGeometry(QtCore.QRect(130, 110, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.reclast.setFont(font)
        self.reclast.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.reclast.setText("")
        self.reclast.setObjectName("reclast")
        self.rectakepic = QtWidgets.QPushButton(self.recframe)
        self.rectakepic.setGeometry(QtCore.QRect(10, 220, 111, 41))

        self.rectakepic.clicked.connect(self.takepicture)

        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.rectakepic.setFont(font)
        self.rectakepic.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rectakepic.setAutoFillBackground(False)
        self.rectakepic.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.rectakepic.setAutoDefault(False)
        self.rectakepic.setDefault(False)
        self.rectakepic.setFlat(False)
        self.rectakepic.setObjectName("rectakepic")
        self.rectable = QtWidgets.QTableWidget(self.recframe)
        self.rectable.setGeometry(QtCore.QRect(320, 150, 256, 311))
        self.rectable.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rectable.setStyleSheet("font: 12pt \"Sitka\";\n"
"")
        self.rectable.setObjectName("rectable")
        self.rectable.setColumnCount(9)
        self.rectable.setRowCount(0)
        
#         self.viewrec()
        
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.rectable.setHorizontalHeaderItem(8, item)
        self.createacc_9 = QtWidgets.QPushButton(self.recframe)
        self.createacc_9.setGeometry(QtCore.QRect(110, 470, 71, 31))
        
        self.createacc_9.clicked.connect(self.quicksearchbutton)
        
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.createacc_9.setFont(font)
        self.createacc_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createacc_9.setAutoFillBackground(False)
        self.createacc_9.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.createacc_9.setAutoDefault(False)
        self.createacc_9.setDefault(False)
        self.createacc_9.setFlat(False)
        self.createacc_9.setObjectName("createacc_9")
        self.recpic = QtWidgets.QLabel(self.recframe)
        self.recpic.setGeometry(QtCore.QRect(10, 100, 111, 111))
        self.recpic.setAutoFillBackground(False)
        self.recpic.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.recpic.setText("")
        self.recpic.setObjectName("recpic")
        self.label_2 = QtWidgets.QLabel(self.recframe)
        self.label_2.setGeometry(QtCore.QRect(180, -10, 351, 111))
        self.label_2.setAutoFillBackground(False)
        self.label_2.setStyleSheet("font: 87 16pt \"Arial Black\";")
        self.label_2.setObjectName("label_2")
        self.recphone = QtWidgets.QLabel(self.recframe)
        self.recphone.setGeometry(QtCore.QRect(130, 220, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.recphone.setFont(font)
        self.recphone.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.recphone.setText("")
        self.recphone.setObjectName("recphone")
        self.recstud = QtWidgets.QLineEdit(self.recframe)
        self.recstud.setGeometry(QtCore.QRect(320, 110, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.recstud.setFont(font)
        self.recstud.setStyleSheet("font: 12pt \"Sitka\";\n"
"border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);")
        self.recstud.setText("")
        self.recstud.setObjectName("recstud")
        self.loginlogo = QtWidgets.QLabel(self.recframe)
        self.loginlogo.setGeometry(QtCore.QRect(80, 10, 71, 71))
        self.loginlogo.setAutoFillBackground(False)
        self.loginlogo.setText("")
        self.loginlogo.setPixmap(QtGui.QPixmap("background/nemco_logo1.jpg"))
        self.loginlogo.setScaledContents(True)
        self.loginlogo.setWordWrap(False)
        self.loginlogo.setObjectName("loginlogo")
        self.label.raise_()
        self.recvac.raise_()
        self.label_5.raise_()
        self.idsearch.raise_()
        self.delete_2.raise_()
#         self.recsec.raise_()
        self.label_6.raise_()
#         self.reccourse.raise_()
        self.recfirst.raise_()
        self.reclast.raise_()
        self.rectakepic.raise_()
        self.rectable.raise_()
        self.createacc_9.raise_()
        self.recpic.raise_()
        self.label_2.raise_()
        self.recphone.raise_()
        self.recstud.raise_()
        self.loginlogo.raise_()
        self.label_4.raise_()
        self.update.raise_()
        main.setCentralWidget(self.centralwidget)

        self.retranslateUi(main)
        QtCore.QMetaObject.connectSlotsByName(main)

    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "Student Record"))
        self.label_4.setText(_translate("main", "Students Name:"))
        self.update.setText(_translate("main", "Update"))
        self.label_5.setText(_translate("main", "Phone Number:"))
        self.idsearch.setText(_translate("main", "SEARCH"))
        self.delete_2.setText(_translate("main", "Delete"))
#         self.recsec.setPlaceholderText(_translate("main", "Year level - Section"))
        self.label_6.setText(_translate("main", "Quick Search"))
#         self.reccourse.setPlaceholderText(_translate("main", "Course"))
        self.recfirst.setText(_translate("main", "First Name"))
        self.reclast.setText(_translate("main", "Last Name"))
        self.rectakepic.setText(_translate("main", "TAKE PICTURE"))
        item = self.rectable.horizontalHeaderItem(0)
        item.setText(_translate("main", "Student Id"))
        item = self.rectable.horizontalHeaderItem(1)
        item.setText(_translate("main", "Last Name"))
        item = self.rectable.horizontalHeaderItem(2)
        item.setText(_translate("main", "First name"))
        item = self.rectable.horizontalHeaderItem(3)
        item.setText(_translate("main", "Middle Name"))
        item = self.rectable.horizontalHeaderItem(4)
        item.setText(_translate("main", "Extension"))
        item = self.rectable.horizontalHeaderItem(5)
        item.setText(_translate("main", "New Column"))
        item = self.rectable.horizontalHeaderItem(6)
        item.setText(_translate("main", "Course"))
        item = self.rectable.horizontalHeaderItem(7)
        item.setText(_translate("main", "Status"))
        item = self.rectable.horizontalHeaderItem(8)
        item.setText(_translate("main", "Y"))
        self.createacc_9.setText(_translate("main", "SEARCH"))
        self.label_2.setText(_translate("main", "STUDENTS RECORD"))
        self.recphone.setText(_translate("main", "Phone Number"))
        self.recstud.setPlaceholderText(_translate("main", "Student ID"))
        self.recvac.setItemText(0, _translate("main", "Fully Vaccinated with Booster"))
        self.recvac.setItemText(1, _translate("main", "Fully Vaccinated"))
        self.recvac.setItemText(2, _translate("main", "1st Dose Only"))
        self.recvac.setItemText(3, _translate("main", "Unvaccinated"))
    
    
    def takepicture(self):
        self.facerecognition()
        
    def updatebuttons(self):
        select = self.rectable.selectedItems()
        print(select)
      
    def regbutton(self):
#         self.regwindow()
        select = self.rectable.selectedItems()
        print(select)
        
    def idsearchbutton(self):
        conn = self.connection()
        cur = conn.cursor()
        
        
        quary = 'SELECT * FROM Management WHERE Student_ID =\'' + str(self.recstud.text()) + "\'"

        data = cur.execute(quary)

        row = 0
        self.rectable.setRowCount(row)
        for row_count, row_data in enumerate(data):
            self.rectable.insertRow(row_count)
            for column_number, data in enumerate(row_data):
                self.rectable.setItem(row_count, column_number,QTableWidgetItem(str(data)))
    
    def quicksearchbutton(self):
        
        self.statusonly()
        
                
    def viewrec(self):
        self.view_reg()
        self.rectable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.rectable.resizeColumnsToContents()   
    
    def regwindow(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = Ui_reg()
                self.ui.setupUi(self.window)
                self.window.show()
                
    def connection(self):
        try:
            conn = sqlite3.connect("manage.db")
        except:
            print("cannot connect to the database")
        return conn

    
    def view_reg(self):
        conn = self.connection()
        cur = conn.cursor()
        quary = 'SELECT * FROM Management WHERE Student_ID =\'' + name + "\'"

        data = cur.execute(quary)

        row = 0
        self.rectable.setRowCount(row)
        for row_count, row_data in enumerate(data):
            self.rectable.insertRow(row_count)
            for column_number, data in enumerate(row_data):
                self.rectable.setItem(row_count, column_number,QTableWidgetItem(str(data)))
    
    def facerecognition(self):
            FONT=cv2.FONT_HERSHEY_COMPLEX
            global flag_face_recognised
            flag_face_recognised = False  # to keep track if the user face is recognized
            global flag_face_not_recognised
            flag_face_not_recognised = False
            images=[]
            global name
            global x1
            global x2
            global y1
            global y2
            global facelocation
            global frame
            names=[]
            tries = 0
            max = 4
            path = "/home/admin/Desktop/Thesis/dataset/*.*"
            
            for file in glob.glob(path):
                image = cv2.imread(file)
                a=os.path.basename(file)
                b=os.path.splitext(a)[0]
                names.append(b)
                images.append(image)

            def encoding1(images):
                encode=[]

                for img in images:
                    unk_encoding = face_recognition.face_encodings(img)[0]
                    encode.append(unk_encoding)
                return encode    

            encodelist=encoding1(images)
               
            cap =cv2.VideoCapture(0)
        
            while True:
                ret,frame=cap.read()
                frame1=cv2.resize(frame,(0,0),None,0.25,0.25)
                face_locations = face_recognition.face_locations(frame1)
                curframe_encoding = face_recognition.face_encodings(frame1,face_locations)
                for encodeface,facelocation in zip(curframe_encoding,face_locations):
                    results = face_recognition.compare_faces(encodelist, encodeface)
                    distance= face_recognition.face_distance(encodelist, encodeface)
                    match_index=np.argmin(distance)
                    
                    x1,y1,x2,y2=facelocation
                    x1,y1,x2,y2=x1*4,y1*4,x2*4,y2*4
                    cv2.rectangle(frame,(y1,x1),(y2,x2),(0,0,255),3)
                    
                    if True in results:
                        name=names[match_index]
                        self.firstname()
                        flag_face_recognised = True
                    else:
                        cv2.putText(frame,"Unknown",(y2+6,x2-6),cv2.FONT_HERSHEY_COMPLEX,1,(255,0,255),2)
                        flag_face_not_recognised = True
       
                cv2.imshow("Facial Recognition is Running", frame)
                key = cv2.waitKey(1) 
                if flag_face_recognised == True:
                    break
            cap.release()
            cv2.destroyAllWindows()


    def connection(self):
            try:
                conn = sqlite3.connect("manage.db")
            except:
                print("cannot connect to the database")
            return conn


    def firstname(self):
            conn = self.connection()
            cur = conn.cursor()

            #idd = name

            quary = 'SELECT First_Name FROM Management WHERE Student_ID =\'' + name + "\'"
            cur.execute(quary)
            result = cur.fetchall()
            
            if cur.execute(quary):
                for y in cur.execute(quary):
                    fname =re.sub(r'[^\w]'," ", str(y))
                    self.recfirst.setText(fname)
                    self.lastname()
                    self.phonenume()
                    self.view_reg()
                    
                    self.recpic.setScaledContents(True)
                    pixmap = QPixmap('/home/admin/Desktop/Thesis/dataset/'+ name +'.jpeg')
                    self.recpic.setPixmap(pixmap)
                    self.recpic.repaint()
            else:
                #self.un_id()
                print ("dili register")
                
    def lastname(self):
            conn = self.connection()
            cur = conn.cursor()

#             idd = name

            quary = 'SELECT Last_Name FROM Management WHERE Student_ID =\'' + name + "\'"
            cur.execute(quary)
            result = cur.fetchall()
            
            if cur.execute(quary):
                for y in cur.execute(quary):
                    fname =re.sub(r'[^\w]'," ", str(y))
                    self.reclast.setText(fname)     
            else:
                print ("dili register")
                
    def phonenume(self):
            conn = self.connection()
            cur = conn.cursor()

#             idd = name

            quary = 'SELECT Phone_Number FROM Management WHERE Student_ID =\'' + name + "\'"
            cur.execute(quary)
            result = cur.fetchall()
            
            if cur.execute(quary):
                for y in cur.execute(quary):
                    fname =re.sub(r'[^\w]'," ", str(y))
                    self.recphone.setText(fname)
            else:
                #self.un_id()
                print ("dili register")
    
        
    def statusonly(self):
        conn = self.connection()
        cur = conn.cursor()        
        quary = 'SELECT * FROM Management WHERE Status =\'' + str(self.recvac.currentText()) + "\'"

        data = cur.execute(quary)

        row = 0
        self.rectable.setRowCount(row)
        for row_count, row_data in enumerate(data):
            self.rectable.insertRow(row_count)
            for column_number, data in enumerate(row_data):
                self.rectable.setItem(row_count, column_number,QTableWidgetItem(str(data)))
    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main = QtWidgets.QMainWindow()
    ui = Ui_rec()
    ui.setupUi(main)
    main.show()
    sys.exit(app.exec_())
